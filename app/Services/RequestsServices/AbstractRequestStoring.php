<?php

namespace App\Services\RequestsServices;

use App\Core\Classes\StoringData\AbstractClassHandleStoreData;
use App\Http\Requests\MaintenanceRequests\StoringNewRequest;
use Illuminate\Http\Exceptions\HttpResponseException;
use Illuminate\Support\Facades\Response;

abstract class AbstractRequestStoring extends  AbstractClassHandleStoreData
{
    private string $otp='';

    protected function doBeforeValidation(): void
    {
        $data = app($this->getModelClass())
            ->where('requester_id', auth('customer')->id())
            ->whereNull('rating')
            ->exists();
        if ($data) {
            throw new HttpResponseException(response()->json([
                'status' => 'error',
                'errors' => ["يجب عليك تقييم الطلب السابق قبل تقديم طلب جديد."]
            ], 422));
        }
    }
    protected function getDataHandle(): array
    {
        $otp = rand(1000, 9999);
        $this->otp = $otp;
        return array_merge(parent::getDataHandle() ,['otp' => $otp ,'requester_id' => auth('customer')->id()]);
    }

    public function requestFile(): string
    {
        return StoringNewRequest::class;
    }

    protected function arrayData()
    {
        return array_merge( parent::arrayData(), ['otp' => $this->otp]); // TODO: Change the autogenerated stub
    }
}
